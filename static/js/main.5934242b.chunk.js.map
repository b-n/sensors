{"version":3,"sources":["config.js","hooks/sensorData.js","pages/common/Graph/Axes.js","pages/common/Graph/DayGraph.js","hooks/graphScales.js","pages/common/Graph/index.js","pages/Home/index.js","hooks/window.js","App.js","serviceWorker.js","index.js"],"names":["env","apiEndpoint","useSensorData","thing","_useState","useState","_useState2","Object","slicedToArray","sensorData","setSensorData","useEffect","fetch","method","headers","Content-Type","mode","then","res","json","XAxis","props","scale","transform","gridline","className","from","domain","to","width","range","dates","Array","differenceInHours","fill","map","x","i","addHours","concat","react_default","a","createElement","lib","x1","y1","x2","y2","stroke","strokeWidth","d","react","key","y","textAnchor","length","format","undefined","YAxis","projects","project","alignmentBaseline","DayGraph","height","date","data","xScale","scaleTime","setScale","useTimeScale","yScale","_ref","_useState3","scaleLinear","_useState4","useLinearScale","keyedData","objectSpread","previousPPM","ppm","previousTimestamp","timestamp","console","log","translate","Axes_XAxis","Axes_YAxis","layout_lib","nodeEnter","animate","nodes","Date","line","cx","cy","r","assign","Graph","dayData","keys","margin","Graph_DayGraph","Home","window","innerWidth","setWidth","addEventListener","debounce","useWindowWidth","pages_common_Graph","App","pages_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5934242b.chunk.js","sourcesContent":["const dev = {\n  apiEndpoint: 'http://localhost:4000/thing/'\n}\n\nconst prod = {\n  apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/'\n}\n\nconst env = process.env.NODE_ENV === 'development'\n  ? dev\n  : prod;\n\nexport {\n  env\n}\n\n","import { useState, useEffect } from 'react';\nimport { env } from '../config'\n\nconst useSensorData = (thing) => {\n  const [sensorData, setSensorData] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      env.apiEndpoint + thing,\n      {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors'\n      }\n    )\n      .then(res => res.json())\n      .then(res => { setSensorData(res) });\n  }, []);\n\n  return sensorData\n}\n\nexport default useSensorData;\n","import React, { Fragment } from 'react';\nimport { Group, Line, Text } from '@potion/element'\nimport { differenceInHours, addHours, format } from 'date-fns'\n\nconst XAxis = (props) => {\n  const { scale, transform, gridline, className } = props;\n\n  const from = scale.domain()[0];\n  const to = scale.domain()[1];\n  const width = scale.range()[1];\n\n  const dates = new Array(differenceInHours(to, from)).fill(0).map((x, i) => addHours(from, i)).concat(to);\n\n  return (\n    <Group transform={transform} className={className}>\n      <Line x1={0} y1={0} x2={width} y2={0} stroke='black' strokeWidth={1} className=\"axis\"/>\n      {dates.map((d, i) => {\n        const x = scale(d);\n        return (\n        <Fragment key={i}>\n          <Line\n            x1={x} x2={x}\n            y1={0} y2={5}\n            className=\"tick\"\n          />\n          <Text\n            className=\"tick-label\"\n            x={x}\n            y={13}\n            textAnchor={i > 0 ? i < dates.length-1 ? 'middle' : 'end' : 'start' }\n          >\n            {format(d, 'HH:mm')}\n          </Text>\n          {gridline === undefined\n            ? null\n            : (<Line x1={x} x2={x} y1={-gridline} y2={0} className=\"gridline\"/>)}\n        </Fragment>\n        );\n      })}\n    </Group>\n  )\n}\n\nconst YAxis = (props) => {\n  const { scale, transform, gridline, className } = props;\n\n  const projects = scale.domain();\n  const range = scale.range();\n\n  return (\n    <Group transform={transform} className={className}>\n      <Line x1={0} x2={0} y1={range[0]} y2={range[1]} stroke=\"black\" strokeWidth={1} />\n      {projects.map((project, i) => {\n        const y = scale(project);\n        return (\n          <Fragment key={i}>\n            <Line\n              x1={0}\n              x2={-5}\n              y1={y}\n              y2={y}\n              stroke='black'\n              strokeWidth={1}\n              className=\"tick\"\n            />\n            <Text\n              className=\"tick-label\"\n              x={-7}\n              y={y}\n              textAnchor='end'\n              alignmentBaseline='central'\n            >\n              {project}\n            </Text>\n            {\n              gridline === undefined\n                ? null\n                : (<Line x1={0} x2={gridline} y1={y} y2={y} className=\"gridline\"/>)\n            }\n          </Fragment>\n        )\n      })}\n    </Group>\n  );\n}\n\nexport {\n  XAxis,\n  YAxis,\n}\n","import React, { Fragment } from 'react'\nimport { Collection } from '@potion/layout'\nimport { Group, Text, Circle, Line } from '@potion/element'\nimport { addHours, format } from 'date-fns'\n\nimport { XAxis, YAxis } from './Axes'\n\nimport './index.css'\n\nimport { useTimeScale, useLinearScale } from '../../../hooks/graphScales'\n\nconst DayGraph = (props) => {\n  const {\n    x,\n    y,\n    width,\n    height,\n    date,\n    data,\n  } = props;\n\n  const from = addHours(date, 0),\n        to = addHours(date, 24);\n\n  const xScale = useTimeScale({ width, from, to });\n  const yScale = useLinearScale({ height, from: 400, to: 1500 });\n\n  const keyedData = data.map((d,i) => ({\n    key: '' + i,\n    ...d,\n    previousPPM: i === 0 ? d.ppm : data[i-1].ppm,\n    previousTimestamp: i === 0 ? d.timestamp : data[i-1].timestamp\n  }));\n  console.log(data);\n\n  return (\n    <Group transform={{translate: [x, y]}}>\n      <Text y={-2} x={5}>{format(date, 'ddd\\tDD\\tMMM')}</Text>\n      <XAxis\n        scale={xScale}\n        transform={{translate: [0, 100]}}\n        gridline={100}\n        className=\"x-axis\"\n      />\n      <YAxis\n        scale={yScale}\n        gridline={width}\n        className=\"y-axis\"\n      />\n      <Group className=\"plot\">\n        <Collection\n          data={keyedData}\n          nodeEnter={d => ({ ...d, ppm: 0, previousPPM: 0 })}\n          animate\n        >\n          {nodes => nodes.map(({key, ppm, previousPPM, timestamp, previousTimestamp}) => {\n            const x1 = xScale(new Date(timestamp));\n            const y1 = yScale(ppm);\n            const x2 = xScale(new Date(previousTimestamp));\n            const y2 = yScale(previousPPM);\n            const line = { x1, x2, y1, y2 };\n            return (\n              <Fragment key={key}>\n                <Circle cx={x1} cy={y1} r={2} fill=\"black\" />\n                <Line {...line} className=\"plot\" />\n              </Fragment>\n            );\n          //return <Rect key={key} x={x} y={y-bandWidth/2} width={width} height={bandWidth} fill={projectScale(projectName)}/>\n          })}\n        </Collection>\n      </Group>\n    </Group>\n  );\n}\n\nexport default DayGraph;\n","import { useState, useEffect } from 'react';\nimport { scaleTime, scaleLinear } from 'd3-scale';\n\nconst useTimeScale = (props) => {\n  const { from, to, width } = props;\n  const [scale, setScale] = useState({ scale: scaleTime().domain([from, to]) });\n\n  useEffect(() => {\n    setScale({\n      scale: scale.scale\n        .range([0, width])\n    })\n  }, [width]);\n\n  return scale.scale;\n}\n\nconst useLinearScale = ({ from, to, height }) => {\n  const [ scale, setScale ] = useState({ scale: scaleLinear().domain([from, to])});\n\n  useEffect(() => {\n    setScale({\n      scale: scale.scale\n        .range([height, 0])\n    })\n  }, [height]);\n\n  return scale.scale;\n}\n\nexport {\n  useTimeScale,\n  useLinearScale\n}\n","import React from 'react';\nimport { Svg } from '@potion/element'\n\nimport DayGraph from './DayGraph'\n\nconst Graph = (props) => {\n  const { data, width } = props;\n\n  const dayData = Object.keys(data.data).map(key => ({ date: key, data: data.data[key]}));\n  console.log(dayData);\n\n  const margin = { top: 30, bottom: 0, left: 50, right: 30 }\n\n  const drawHeight = 100;\n\n  const height = margin.top + margin.bottom + dayData.length*(drawHeight + 60);\n\n  return (\n    <Svg height={height} width={width}>\n      {dayData.length > 0 ? dayData.map((d, i) =>\n        <DayGraph\n          x={margin.left}\n          y={i*(drawHeight+60) + margin.top}\n          width ={width - margin.left - margin.right}\n          height={drawHeight}\n          key={d.date}\n          date={d.date}\n          data={d.data} \n        />\n      ) : null}\n    </Svg>\n  )\n}\n\nexport default Graph;\n","import React from 'react';\nimport useSensorData from '../../hooks/sensorData'\nimport Graph from '../common/Graph'\nimport { useWindowWidth } from '../../hooks/window'\n\nconst Home = (props) => {\n  const data = useSensorData('breather');  \n\n  const width = useWindowWidth();\n  console.log(data);\n\n  return (\n    <div>\n      <section>\n        {data !== null\n          ? <Graph data={data} width={width} />\n          : null\n        }\n      </section>\n    </div>\n  )\n}\n\nexport default Home;\n\n","import { useState, useEffect } from 'react';\nimport debounce from 'debounce'\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', debounce(() => {\n      setWidth(window.innerWidth);\n    }, 500));\n  }, [])\n\n  return width;\n}\n\nexport { useWindowWidth };\n","import React from 'react';\nimport Home from './pages/Home'\n\nconst App = (props) => {\n  return(\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}