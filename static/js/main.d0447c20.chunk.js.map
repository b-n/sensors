{"version":3,"sources":["config.js","hooks/sensorData.js","pages/common/Graph/Axes.js","pages/common/Graph/DayGraph.js","hooks/graphScales.js","pages/common/Graph/index.js","hooks/dataSummary.js","pages/Home/index.js","hooks/window.js","App.js","serviceWorker.js","index.js"],"names":["env","apiEndpoint","useSensorData","thing","_useState","useState","_useState2","Object","slicedToArray","sensorData","setSensorData","useEffect","fetch","method","headers","Content-Type","mode","then","res","json","XAxis","props","scale","transform","gridline","className","ticks","axisEl","useRef","select","current","call","axisBottom","concat","toConsumableArray","domain","range","react_default","a","createElement","lib","map","tick","key","x1","x2","y1","y2","ref","YAxis","axisLeft","filter","_x","i","DayGraph","x","y","width","height","date","data","yScale","ppmColorScale","xScale","_ref","from","to","scaleTime","useTimeScale","addHours","yMin","translate","format","Axes_XAxis","timeHour","every","Axes_YAxis","layout_lib","nodeEnter","d","objectSpread","median","upper","lower","animate","nodes","Date","react","cx","cy","r","fill","stroke","strokeWidth","Graph","summaryData","interval","min","max","setSummaryData","intervalSeconds","allMinMax","outputData","keys","baseDate","dayData","reduce","c","timeGroup","timestamp","differenceInSeconds","push","avgValues","mean","ppm","quantile","apply","extent","sort","b","totalExtent","useSummaryData","margin","length","_ref2","scaleLinear","useLinearScale","_ref3","interpolator","scaleSequential","useSequentialScale","interpolateRdYlGn","Graph_DayGraph","Home","window","innerWidth","setWidth","addEventListener","debounce","useWindowWidth","pages_common_Graph","App","pages_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0447c20.chunk.js","sourcesContent":["const dev = {\n  apiEndpoint: 'http://localhost:4000/thing/'\n}\n\nconst prod = {\n  apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/'\n}\n\nconst env = process.env.NODE_ENV === 'development'\n  ? dev\n  : prod;\n\nexport {\n  env\n}\n\n","import { useState, useEffect } from 'react';\nimport { env } from '../config'\n\nconst useSensorData = (thing) => {\n  const [sensorData, setSensorData] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      env.apiEndpoint + thing,\n      {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors'\n      }\n    )\n      .then(res => res.json())\n      .then(res => { setSensorData(res) });\n  }, []);\n\n  return sensorData\n}\n\nexport default useSensorData;\n","import React, { useRef, useEffect } from 'react';\nimport { Group, Line } from '@potion/element'\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { select } from 'd3-selection';\n\nconst XAxis = (props) => {\n  const { scale, transform, gridline, className, ticks } = props;\n\n  const axisEl = useRef(null);\n\n  useEffect(() => {\n    select(axisEl.current)\n      .call(\n        axisBottom()\n        .scale(scale)\n        .ticks(ticks)\n      );\n  }, [ ...scale.domain(), ...scale.range() ]);\n\n  return (\n    <Group transform={transform} className={className}>\n      {gridline && scale.ticks(ticks).map(tick => (\n        <Line key={tick} x1={scale(tick)} x2={scale(tick)} y1={-gridline} y2={0} className=\"gridline\"/>\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  )\n}\n\nconst YAxis = (props) => {\n  const { scale, transform, gridline, className, ticks } = props;\n\n  const axisEl = useRef(null);\n\n  useEffect(() => {\n    select(axisEl.current)\n      .call(\n        axisLeft()\n          .scale(scale)\n          .ticks(ticks)\n      );\n  }, [...scale.domain(), ...scale.range() ]);\n\n  return (\n    <Group transform={transform} className={className}>\n      {gridline && scale.ticks(ticks).filter((_x, i) => i !== 0).map((tick, i) => (\n        <Line key={tick} x1={0} x2={gridline} y1={scale(tick)} y2={scale(tick)} className=\"gridline\"/>\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  );\n}\n\nexport {\n  XAxis,\n  YAxis,\n}\n","import React, { Fragment } from 'react'\nimport { Collection } from '@potion/layout'\nimport { Group, Text, Circle, Line } from '@potion/element'\nimport { addHours, format } from 'date-fns'\nimport { timeHour } from 'd3-time'\n\nimport { XAxis, YAxis } from './Axes'\n\nimport './index.css'\n\nimport { useTimeScale } from '../../../hooks/graphScales'\n\nconst DayGraph = (props) => {\n  const {\n    x,\n    y,\n    width,\n    height,\n    date,\n    data,\n    yScale,\n    ppmColorScale\n  } = props;\n\n  const from = addHours(date, 0),\n        to = addHours(date, 24);\n\n  const xScale = useTimeScale({ width, from, to });\n\n  const yMin = yScale.domain()[0];\n\n  return (\n    <Group transform={{translate: [x, y]}}>\n      <Text y={-2} x={5}>{format(date, 'ddd\\tDD\\tMMM')}</Text>\n      <XAxis\n        scale={xScale}\n        transform={{translate: [0, height]}}\n        gridline={height}\n        className=\"x-axis\"\n        ticks={timeHour.every(2)}\n      />\n      <YAxis\n        scale={yScale}\n        gridline={width}\n        className=\"y-axis\"\n        ticks={7}\n      />\n      <Group className=\"plot\">\n        <Collection\n          data={data}\n          nodeEnter={d => ({ ...d, median: yMin, upper: yMin, lower: yMin })}\n          animate\n        >\n          {nodes => nodes.map(({key, date, median, lower, upper}) => {\n            const x = xScale(new Date(date));\n            return (\n              <Fragment key={key}>\n                <Line x1={x} x2={x} y1={yScale(lower)} y2={yScale(upper)} />\n                <Circle cx={x} cy={yScale(median)} r={3} fill={ppmColorScale(median)} stroke=\"grey\" strokeWidth=\"1px\"/>\n              </Fragment>\n            );\n          })}\n        </Collection>\n      </Group>\n    </Group>\n  );\n}\n\nexport default DayGraph;\n","import { useEffect } from 'react';\nimport { scaleTime, scaleLinear, scaleSequential } from 'd3-scale';\n\nconst useTimeScale = ({ from, to, width }) => {\n  const scale = scaleTime()\n    .domain([from, to ])\n    .range([0, width]);\n\n  useEffect(() => {\n    scale\n      .range([0, width])\n  }, [width]);\n\n  return scale;\n}\n\nconst useLinearScale = ({ from, to, height }) => {\n  const scale = scaleLinear()\n    .domain([from, to])\n    .range([ height, 0 ]);\n\n  useEffect(() => {\n    scale\n      .domain([from, to ])\n      .range([height, 0]);\n  }, [from, to, height]);\n\n  return scale;\n}\n\nconst useSequentialScale = ({ from, to, interpolator }) => {\n  const scale = scaleSequential(interpolator)\n    .domain([from, to]);\n\n  useEffect(() => {\n    scale\n      .domain([from, to]);\n  }, [ from, to ])\n\n  return scale;\n}\n\nexport {\n  useTimeScale,\n  useLinearScale,\n  useSequentialScale\n}\n","import React from 'react';\nimport { Svg } from '@potion/element'\n\nimport DayGraph from './DayGraph'\n\nimport { useLinearScale, useSequentialScale } from '../../../hooks/graphScales'\nimport { useSummaryData } from '../../../hooks/dataSummary'\n\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\n\nconst Graph = (props) => {\n  const { data, width } = props;\n\n  const summaryData = useSummaryData({ data: data.data, interval: 10 });\n\n  const margin = { top: 30, bottom: 0, left: 50, right: 30 }\n\n  const drawHeight = 140;\n\n  const height = margin.top + margin.bottom + summaryData.data.length*(drawHeight + 60);\n\n  const yScale = useLinearScale({ height: drawHeight, from: summaryData.min, to: summaryData.max });\n\n  const ppmColorScale = useSequentialScale({ interpolator: interpolateRdYlGn, to: 400, from: 1200 })\n\n  return (\n    <Svg height={height} width={width}>\n      {summaryData.data.length > 0 ? summaryData.data.map((d, i) =>\n        <DayGraph\n          x={margin.left}\n          y={i*(drawHeight+60) + margin.top}\n          width ={width - margin.left - margin.right}\n          height={drawHeight}\n          key={d.date}\n          date={d.date}\n          data={d.data}\n          yScale={yScale}\n          ppmColorScale={ppmColorScale}\n        />\n      ) : null}\n    </Svg>\n  )\n}\n\nexport default Graph;\n","import { useState, useEffect } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { extent, mean, quantile } from 'd3-array';\n\nconst useSummaryData = ({ data, interval }) => {\n\n  const [ summaryData, setSummaryData ] = useState({ min: 0, max: 0, data: []});\n\n  const intervalSeconds = interval * 60;\n\n  useEffect(() => {\n    const allMinMax = [];\n    const outputData = Object.keys(data).map(d => {\n      const baseDate = new Date(d + 'T00:00:00');\n\n      const dayData = data[d]\n      .reduce((a, c) => {\n        const timeGroup = c.timestamp + (differenceInSeconds(baseDate, c.timestamp) % intervalSeconds) * 1000;\n\n        if (!a[timeGroup]) a[timeGroup] = [];\n        a[timeGroup].push(c);\n        return a;\n      }, {})\n      const avgValues = Object.keys(dayData).map(key => {\n        return {\n          key,\n          date: +key,\n          mean: mean(dayData[key], d => d.ppm),\n          max: quantile(dayData[key], 1, d => d.ppm),\n          upper: quantile(dayData[key], 0.75, d => d.ppm),\n          median: quantile(dayData[key], 0.5, d => d.ppm),\n          lower: quantile(dayData[key], 0.25, d => d.ppm),\n          min: quantile(dayData[key], 0, d => d.ppm)\n        }\n      })\n      allMinMax.push(...extent(avgValues, d => d.mean));\n      return { \n        date: d,\n        data: avgValues\n      };\n    }).sort((a, b) => a.date >= b.date ? a.date > b.date ? -1 : 0 : 1);\n\n    const totalExtent = extent(allMinMax);\n\n    setSummaryData({\n      min: totalExtent[0],\n      max: totalExtent[1],\n      data: outputData\n    });\n\n  }, [data]);\n\n  return summaryData;\n}\n\nexport { useSummaryData };\n","import React from 'react';\nimport useSensorData from '../../hooks/sensorData'\nimport Graph from '../common/Graph'\nimport { useWindowWidth } from '../../hooks/window'\n\nconst Home = (props) => {\n  const data = useSensorData('breather');  \n\n  const width = useWindowWidth();\n\n  return (\n    <div>\n      <section>\n        {data !== null\n          ? <Graph data={data} width={width} />\n          : null\n        }\n      </section>\n    </div>\n  )\n}\n\nexport default Home;\n\n","import { useState, useEffect } from 'react';\nimport debounce from 'debounce'\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', debounce(() => {\n      setWidth(window.innerWidth);\n    }, 500));\n  }, [])\n\n  return width;\n}\n\nexport { useWindowWidth };\n","import React from 'react';\nimport Home from './pages/Home'\n\nconst App = (props) => {\n  return(\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}