{"version":3,"sources":["config.js","hooks/sensorData.js","hooks/window.js","components/Chart/Axes.js","components/Chart/index.js","hooks/scales.js","hooks/dataSummary.js","pages/common/ThingHistory/CO2Plot.js","pages/common/ThingHistory/HistoryChart.js","pages/common/ThingHistory/index.js","pages/common/Information/index.js","pages/Home/index.js","hooks/cast.js","pages/CastReciever/index.js","App.js","serviceWorker.js","index.js"],"names":["env","apiEndpoint","chromeCastAppId","getData","_ref2","thing","fromDate","toDate","url","URL","searchParams","append","fetch","method","headers","Content-Type","mode","then","res","json","useSensorData","_ref","arguments","length","undefined","refreshDuration","_useState","useState","_useState2","Object","slicedToArray","sensorData","setSensorData","useEffect","window","setInterval","useWindowWidth","innerWidth","width","setWidth","addEventListener","debounce","useTranslate","pos","translate","setTranslate","apply","concat","toConsumableArray","useElem","axisFn","scale","ticks","range","tickFormat","elem","useRef","axis","select","current","call","domain","AxisBottom","chart","gridlines","className","plotHeight","plotWidth","axisEl","axisBottom","react_default","a","createElement","lib","transform","map","tick","key","x1","x2","y1","y2","ref","AxisLeft","_ref3","axisLeft","Chart","height","_ref$marginTop","marginTop","_ref$marginRight","marginRight","_ref$marginBottom","marginBottom","_ref$marginLeft","marginLeft","children","chartProps","clipPathId","id","React","Children","child","cloneElement","useSequentialScale","_ref4","_ref4$domain","interpolator","scaleSequential","getDataPoints","data","accessor","sort","b","mean","max","quantile","upper","median","lower","min","CO2Plot","yScale","xScale","colorScale","animate","_ref$measure","measure","clipPath","graphData","date","measures","objectWithoutProperties","objectSpread","nodeEnter","console","log","layout_lib","d","nodes","x","react","cx","cy","r","fill","stroke","strokeWidth","HistoryChart","co2Scale","co2ColorScale","scaleTime","useTimeScale","addHours","components_Chart","y","format","Axes_AxisLeft","Axes_AxisBottom","ThingHistory_CO2Plot","co2","padArray","padding","Graph","summaryData","interval","_ref$extentAccessor","extentAccessor","temp","humidity","setSummaryData","intervalSeconds","extents","outputData","keys","baseDate","Date","dayData","reduce","c","timeGroup","timestamp","differenceInSeconds","push","avgValues","ppm","_extents$measure","extent","val","useSummaryData","scaleLinear","useLinearScale","interpolateRdYlGn","Fragment","i","ThingHistory_HistoryChart","LegendTable","LegendTableItem","color","explanation","style","backgroundColor","Information","onlySummary","ppmColorScale","to","from","href","target","rel","Information_LegendTable","Information_LegendTableItem","Home","appId","cast","framework","CastContext","getInstance","setOptions","receiverApplicationId","autoJoinPolicy","chrome","AutoJoinPolicy","ORIGIN_SCOPED","useCastSender","addDays","graphWidth","common_ThingHistory","pages_common_Information","CastReciever","context","CastReceiverContext","options","CastReceiverOptions","disableIdleTimeout","start","App","props","BrowserRouter","basename","Route","exact","path","render","history","location","queryString","parse","search","reciever","pages_Home","component","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06eed0fe.chunk.js","sourcesContent":["const dev = {\n  apiEndpoint: 'http://localhost:4000/thing/',\n  //apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/',\n  chromeCastAppId: '860368F7'\n}\n\nconst prod = {\n  apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/',\n  chromeCastAppId: '95A6E974'\n}\n\nconst env = process.env.NODE_ENV === 'development'\n  ? dev\n  : prod;\n\nexport {\n  env\n}\n\n","import { useState, useEffect } from 'react';\nimport { env } from '../config'\n\nconst useSensorData = (thing, { fromDate, toDate, refreshDuration } = {}) => {\n  const [sensorData, setSensorData] = useState(null);\n\n  useEffect(() => {\n    if (refreshDuration) {\n      window.setInterval(() => {\n        getData({thing, fromDate, toDate})\n          .then(res => { setSensorData(res) });\n      }, refreshDuration);\n    }\n  }, [])\n\n  useEffect(() => {\n    getData({thing, fromDate, toDate})\n      .then(res => { setSensorData(res) });\n  }, [ fromDate, toDate ]);\n\n  return sensorData\n}\n\nconst getData = ({ thing, fromDate, toDate }) => {\n  const url = new URL(thing, env.apiEndpoint);\n  if (fromDate) url.searchParams.append('fromDate', fromDate);\n  if (toDate) url.searchParams.append('toDate', toDate);\n\n  return fetch(\n    url,\n    {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: 'cors'\n    }\n  )\n    .then(res => res.json())\n}\n\nexport default useSensorData;\n","import { useState, useEffect } from 'react';\nimport debounce from 'debounce'\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', debounce(() => {\n      setWidth(window.innerWidth);\n    }, 500));\n  }, [])\n\n  return width;\n}\n\nexport { useWindowWidth };\n","import React, { useRef, useEffect, useState } from 'react'\nimport { Group, Line } from '@potion/element'\nimport { axisBottom, axisLeft } from 'd3-axis'\nimport { select } from 'd3-selection'\nimport 'd3-transition' \nconst useTranslate = (pos) => {\n  const [ translate, setTranslate ] = useState(pos);\n  useEffect(() => {\n    setTranslate(pos)\n  }, ...pos)\n\n  return translate\n}\n\nconst useElem = ({axisFn, scale, range, ticks, tickFormat}) => {\n  const elem = useRef(null);\n\n  useEffect(() => {\n    const axis = axisFn()\n      .scale(scale);\n    if (ticks) axis.ticks(ticks)\n    if (tickFormat) axis.tickFormat(tickFormat);\n\n    select(elem.current)\n      .call(axis);\n  },[\n    ...scale.domain(),\n    ...scale.range(),\n  ]);\n\n  return elem\n}\n\nconst AxisBottom = ({\n  chart,\n  scale,\n  gridlines,\n  className,\n  ticks,\n  tickFormat\n}) => {\n  const translate = useTranslate([0, chart.plotHeight]);\n\n  scale.range([0, chart.plotWidth]);\n\n  const axisEl = useElem({\n    axisFn: axisBottom,\n    scale,\n    ticks,\n    tickFormat\n  })\n\n  return (\n    <Group transform={{translate}} className={className}>\n      {gridlines && scale.ticks().map(tick => scale(tick) > 0 && (\n        <Line key={tick} x1={scale(tick)+0.5} x2={scale(tick)+0.5} y1={-chart.plotHeight} y2={0} className=\"gridline\" />\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  )\n}\n\nconst AxisLeft = ({\n  chart,\n  scale,\n  gridlines,\n  className,\n  ticks,\n  tickFormat\n}) => {\n  const translate = useTranslate([0,0]);\n\n  scale.range([chart.plotHeight, 0]);\n\n  const axisEl = useElem({\n    axisFn: axisLeft,\n    scale,\n    ticks,\n    tickFormat\n  })\n\n  return (\n    <Group transform={{translate}} className={className}>\n      {gridlines && scale.ticks().map(tick => (\n        <Line key={tick} x1={0} x2={chart.plotWidth} y1={scale(tick)+0.5} y2={scale(tick)+0.5} className=\"gridline\"/>\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  )\n}\n\nexport {\n  AxisBottom,\n  AxisLeft\n}\n","import React from 'react'\nimport { Svg, Group, Rect } from '@potion/element'\n\nconst Chart = ({\n  height,\n  width,\n  marginTop = 20,\n  marginRight = 20,\n  marginBottom = 20,\n  marginLeft = 20,\n  children,\n  className\n}) => {\n  const chartProps = {\n    height,\n    width,\n    marginTop,\n    marginRight,\n    marginBottom,\n    marginLeft,\n    plotHeight: height - marginTop - marginBottom,\n    plotWidth: width - marginLeft - marginRight,\n    clipPathId: \"plotArea\",\n  }\n  return (\n    <Svg height={height} width={width} className={className}>\n      <Group transform={{translate: [marginLeft, marginTop ]}}>\n        <clipPath id={chartProps.clipPathId}>\n          <Rect width={chartProps.plotWidth} height={chartProps.plotHeight} />\n        </clipPath>\n        {React.Children.map(\n          children,\n          child => React.cloneElement(child, {chart:chartProps})\n        )}\n      </Group>\n    </Svg>\n  )\n}\n\nexport default Chart\nexport { AxisBottom, AxisLeft } from './Axes'\nexport { Line } from './Line'\n","import { useEffect } from 'react';\nimport { scaleTime, scaleLinear, scaleOrdinal, scaleSequential } from 'd3-scale';\nimport { hash } from '../lib'\n\nconst useTimeScale = ({domain}) => {\n  const scale = scaleTime()\n    .domain(domain)\n\n  useEffect(() => {\n    scale\n      .domain(domain)\n  }, [ ...domain ]);\n\n  return scale;\n}\n\nconst useLinearScale = ({domain}) => {\n  const scale = scaleLinear()\n    .domain(domain)\n\n  useEffect(() => {\n    scale\n      .domain(domain)\n  }, [ ...domain ]);\n\n  return scale;\n}\n\nconst useOrdinalScale = ({domain = [], range = []}) => {\n  const scale = scaleOrdinal()\n  if (domain.length) scale.domain(domain)\n  if (range.length) scale.range(range)\n\n  useEffect(() => {\n    if (domain.length) scale.domain(domain)\n    if (range.length) scale.range(range)\n  }, [ hash(domain), hash(range) ])\n\n  return scale\n}\n\nconst useSequentialScale = ({ domain = [], interpolator }) => {\n  const scale = scaleSequential(interpolator)\n    .domain(domain);\n\n  useEffect(() => {\n    scale\n      .domain(domain);\n  }, [ ...domain ])\n\n  return scale;\n}\n\nexport {\n  useTimeScale,\n  useLinearScale,\n  useOrdinalScale,\n  useSequentialScale\n}\n","import { useState, useEffect } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { extent, mean, quantile } from 'd3-array';\n\nconst getDataPoints = (data, accessor) => {\n  data.sort((a,b) => accessor(a) - accessor(b));\n  return {\n    mean: mean(data, accessor),\n    max: quantile(data, 1, accessor),\n    upper: quantile(data, 0.75, accessor),\n    median: quantile(data, 0.5, accessor),\n    lower: quantile(data, 0.25, accessor),\n    min: quantile(data, 0, accessor)\n  }\n}\n\nconst useSummaryData = ({ data, interval, extentAccessor = (d => d.median) }) => {\n\n  const [ summaryData, setSummaryData ] = useState({ co2: [], temp: [], humidity: [], data: []});\n\n  const intervalSeconds = interval * 60;\n\n  useEffect(() => {\n    const extents = {\n      co2: [],\n      temp: [],\n      humidity: []\n    };\n\n    const outputData = Object.keys(data).map(d => {\n      const baseDate = new Date(d + 'T00:00:00');\n\n      const dayData = data[d]\n      .reduce((a, c) => {\n        const timeGroup = c.timestamp + (differenceInSeconds(baseDate, c.timestamp) % intervalSeconds) * 1000;\n\n        if (!a[timeGroup]) a[timeGroup] = [];\n        a[timeGroup].push(c);\n        return a;\n      }, {})\n\n      const avgValues = Object.keys(dayData).map(key => ({\n          key,\n          date: +key,\n          co2: getDataPoints(dayData[key], d => d.ppm),\n          temp: getDataPoints(dayData[key], d => d.temp),\n          humidity: getDataPoints(dayData[key], d => d.humidity)\n      }));\n\n      Object.keys(extents).map(measure => extents[measure].push(...extent(avgValues.map(val => val[measure]), extentAccessor)));\n\n      return { \n        date: baseDate,\n        data: avgValues\n      };\n    }).sort((a, b) => b.date - a.date);\n\n    Object.keys(extents).map(key => extents[key] = extent(extents[key]));\n\n    setSummaryData({\n      ...extents,\n      data: outputData\n    });\n\n  }, [data]);\n\n  return summaryData;\n}\n\nexport { useSummaryData };\n","import React, { Fragment } from 'react'\nimport { Collection } from '@potion/layout'\nimport { Line, Circle } from '@potion/element'\n\nconst CO2Plot = ({\n  chart,\n  yScale,\n  xScale,\n  colorScale,\n  data,\n  animate,\n  measure = 'co2'\n}) => {\n\n  const clipPath = `url(#${chart.clipPathId})`;\n\n  const graphData = data.map(({key, date, ...measures}) => ({\n    key,\n    date,\n    ...measures[measure]\n  }))\n\n  const nodeEnter = {\n    median: yScale.domain()[0],\n    upper: yScale.domain()[1],\n    lower: yScale.domain()[0]\n  }\n\n  console.log()\n\n  return (\n    <Collection\n      data={graphData}\n      nodeEnter={d => ({...d, ...nodeEnter })}\n      animate={animate}\n    >\n      {nodes => nodes.map(({key, date, median, upper, lower }) => {\n        const x = xScale(date);\n        if (x < 0 || x > chart.plotWidth) return null;\n        return (\n          <Fragment key={key}>\n            <Line x1={x} x2={x} y1={yScale(lower)} y2={yScale(upper)} clipPath={clipPath} className=\"iqr-line\"/>\n            <Circle cx={x} cy={yScale(median)} r={3} fill={colorScale(median)} stroke=\"grey\" strokeWidth=\"1px\" clipPath={clipPath}/>\n          </Fragment>\n        );\n      })}\n    </Collection>\n  )\n}\n\nexport default CO2Plot\n","import React from 'react'\nimport { addHours, format } from 'date-fns'\nimport { Text } from '@potion/element'\n\nimport Chart, { AxisBottom, AxisLeft } from '../../../components/Chart'\nimport { useTimeScale } from '../../../hooks'\n\nimport CO2Plot from './CO2Plot'\n\nconst HistoryChart = ({\n  width,\n  co2Scale,\n  co2ColorScale,\n  date,\n  data,\n  animate\n}) => {\n\n  const from = addHours(date, 6),\n        to = addHours(date, 20);\n\n  const xScale = useTimeScale({ domain: [ from, to ] });\n  console.log(date);\n  \n  return (\n    <Chart\n      width={width}\n      height={200}\n      marginLeft={50}\n      marginTop={40}\n    >\n      <Text className=\"title\" x={10} y={-5}>{format(date, 'ddd DD MMM')}</Text>\n      <AxisLeft \n        scale={co2Scale}\n        gridlines\n      />\n      <AxisBottom\n        scale={xScale}\n        gridlines\n      />\n      <CO2Plot\n        xScale={xScale}\n        yScale={co2Scale}\n        colorScale={co2ColorScale}\n        data={data}\n        accessor={d => d.co2}\n        animate={animate}\n      />\n    </Chart>\n  )\n}\n\nexport default HistoryChart;\n","import React from 'react';\n\nimport HistoryChart from './HistoryChart';\n\nimport { useLinearScale, useSequentialScale, useSummaryData } from '../../../hooks/'\n\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\n\nimport './ThingHistory.css'\n\nconst padArray = ([min, max], padding) => ([ min - (max-min) * padding, max + (max-min) * padding ])\n\nconst Graph = ({\n  data,\n  width,\n  animate\n}) => {\n  const summaryData = useSummaryData({ data: data.data, interval: 10 });\n\n  const { co2 } = summaryData;\n\n  const co2Scale = useLinearScale({ domain: padArray(co2, 0.05) });\n\n  const co2ColorScale = useSequentialScale({ domain: [ 1200, 400 ], interpolator: interpolateRdYlGn })\n\n  return (\n    <>\n      {summaryData.data.map((d, i) => (\n        <HistoryChart\n          key={d.date}\n          width={width}\n          co2Scale={co2Scale}\n          co2ColorScale={co2ColorScale}\n          date={d.date}\n          data={d.data}\n          animate={animate}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default Graph;\n","import React from 'react';\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\nimport { useSequentialScale } from '../../../hooks/'\n\nimport './index.css';\n\nconst LegendTable = ({children}) => (<table className=\"info-legend\"><tbody>{children}</tbody></table>)\n\nconst LegendTableItem = ({color, range, explanation}) => (\n  <tr>\n    <td className=\"info-legend-range\">\n      <span className=\"dot\" style={{backgroundColor: color}}></span>\n      {range}\n    </td>\n    <td className=\"info-legend-description\">{explanation}</td>\n  </tr>\n);\n\nconst Information = ({onlySummary}) => {\n  const ppmColorScale = useSequentialScale({ interpolator: interpolateRdYlGn, to: 400, from: 1200 });\n\n  return (\n  <section className=\"info-container\">\n    <h1>Information</h1>\n    {!onlySummary && (\n      <>\n    <p>\n      The graph to the left measures the average Carbon Dioxide (CO<sub>2</sub>)\n      concentration near the sensor in the office. The sensor reads the values\n      in parts per million (ppm).\n    </p>\n    <p>\n      CO<sub>2</sub> is a colorless gas with a density about 60% higher than that\n      of dry air. The current global concentration is about 410 ppm, having risen\n      from pre-industrial levels of 280 ppm. CO<sub>2</sub> is produced by all\n      aerobic organisms (things that breathe air) when they metabolize\n      carbohydrates and lipids (fats etc) to produce energy by respiration.\n    </p>\n    <p>\n      CO<sub>2</sub> levels outside of buildings can range from 380-500ppm. At\n      very high concentrations (10.000ppm), CO<sub>2</sub> becomes toxic to\n      animals. Raising the concentration to 10.000ppm for several hours will\n      kill spider mites and whiteflies in a greenhouse.\n    </p>\n      </>\n    )}\n    <p>\n      A few studies have found linkages in increased CO<sub>2</sub>\n      concentrations and an increase in impairment in cognitive abilities. Relative\n      to 600 ppm, at 1.000 ppm CO<sub>2</sub>, moderate and statistically significant\n      decrements occurred in six of nine scales of decision-making performance\n      <a href=\"https://web.archive.org/web/20160305212909/http://ehp.niehs.nih.gov/wp-content/uploads/2012/09/ehp.1104789.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"><sup>[ref]</sup></a>.\n      In a study of Volatile Organic Compound Exposure (VOC), of which CO<sub>2</sub>\n      is one, average cognitive scores were 61% higher on the Green building day\n      (~740ppm) and 101% higher on the two Green+ (~502ppm) building days than\n      on the Conventional building day (~940ppm) <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4892924/\" target=\"_blank\" rel=\"noopener noreferrer\"><sup>[ref]</sup></a>.\n    </p>\n    <h2>Legend</h2>\n    <LegendTable>\n      <LegendTableItem color={ppmColorScale(500)} range=\"400-600\" explanation=\"Ideal\" />\n      <LegendTableItem color={ppmColorScale(700)} range=\"600-800\" explanation=\"Okay, mild cognitive impairment\" />\n      <LegendTableItem color={ppmColorScale(900)} range=\"800-1000\" explanation=\"Some cognitive impairment\" />\n      <LegendTableItem color={ppmColorScale(1100)} range=\"1000-1200\" explanation=\"Open some windows already\" />\n      <LegendTableItem color={ppmColorScale(1300)} range=\"1200+\" explanation=\"Illegal in South Netherlands (Belgium)\" />\n    </LegendTable>\n\n    <h2>Data Info</h2>\n    <p>\n      Readings are taken every 1 minute from the device, and are comprised of\n      average ppm over that 1 minute period. Values are summarised into 10 minute\n      intervals, where the points represent the median value in that 10 minute1s.\n      The black lines indicate the interquartile range (IQR) of the values in\n      the 10 minute period to show the variablility in the readings.\n    </p>\n  </section>\n  );\n}\n\nexport default Information;\n","import React, { Fragment } from 'react';\n\nimport useSensorData from '../../hooks/sensorData'\nimport { useWindowWidth } from '../../hooks/window'\nimport { useCastSender } from '../../hooks/cast'\n\nimport ThingHistory from '../common/ThingHistory'\nimport Information from '../common/Information'\nimport { addDays, format } from 'date-fns';\n\nimport { env } from '../../config'\nimport './Home.css'\n\nconst Home = () => {\n  useCastSender({appId: env.chromeCastAppId});\n  \n  const data1 = useSensorData('breather', { refreshDuration: 300000, fromDate: format(addDays(new Date(), -8), 'YYYY-MM-DD')});\n  //const data2 = useSensorData('breather2', { refreshDuration: 300000, fromDate: format(addDays(new Date(), -5), 'YYYY-MM-DD')});\n  \n  const data = [ data1 ];\n\n  const width = useWindowWidth();\n\n  const graphWidth = width*0.65*(1/data.length);\n\n  return (\n    <Fragment>\n      {data.map(d => d !== null && (\n        <section\n          key={d.thing}\n          style={{width: graphWidth}}\n        >\n          {d !== null\n            ? <ThingHistory\n                data={d}\n                width={graphWidth}\n                animate={true}\n              />\n            : null\n          }\n        </section>\n      ))}\n      <Information onlySummary={false}/>\n    </Fragment>\n  )\n}\n\nexport default Home;\n\n","import { useEffect } from 'react';\n\nconst useCastSender = ({appId}) => {\n  useEffect(() => {\n    window.cast.framework.CastContext.getInstance().setOptions({\n      receiverApplicationId: appId,\n      autoJoinPolicy: window.chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED\n    })\n  }, []);\n}\n\nconst useCastReciever = () => {\n  useEffect(() => {\n    const context = window.cast.framework.CastReceiverContext.getInstance();\n    const options = new window.cast.framework.CastReceiverOptions();\n    options.disableIdleTimeout = true;\n    context.start(options);\n    if (process.env.NODE_ENV === 'development') context.setLoggerLevel(window.cast.framework.LoggerLevel.DEBUG);\n  }, []);\n}\n\nexport {\n  useCastSender,\n  useCastReciever\n}\n","import React, { Fragment } from 'react';\nimport useSensorData from '../../hooks/sensorData'\nimport { useWindowWidth } from '../../hooks/window'\nimport { useCastReciever } from '../../hooks/cast'\nimport { format, addDays } from 'date-fns'\n\nimport ThingHistory from '../common/ThingHistory'\nimport Information from '../common/Information'\n\nconst CastReciever = () => {\n  useCastReciever();\n  const fromDate = format(addDays(new Date(), -3), 'YYYY-MM-DD')\n  const data = useSensorData('breather', { fromDate, refreshDuration: 60000 });  \n\n  const width = useWindowWidth();\n\n  const graphWidth = width*0.65;\n\n  return (\n    <Fragment>\n      <section\n        style={{width: graphWidth}}\n      >\n        {data !== null\n          ? <ThingHistory\n              data={data}\n              width={graphWidth}\n              animate={true}\n            />\n          : null\n        }\n      </section>\n      <Information onlySummary={false}/>\n    </Fragment>\n  )\n}\n\nexport default CastReciever;\n\n","import React from 'react';\nimport Home from './pages/Home'\nimport CastReciever from './pages/CastReciever'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport queryString from 'query-string'\n\nconst App = (props) => {\n\n  return(\n    <Router basename={process.env.NODE_ENV === 'development' ? '' : '/sensors'}>\n      <div>\n        <Route exact path=\"/\" render={({history, location}) => {\n          if (queryString.parse(location.search).reciever !== undefined) {\n            history.push('/reciever');\n            return null;\n          } \n          return (<Home />)\n        }} />\n        <Route path=\"/reciever\" component={CastReciever} />\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}