{"version":3,"sources":["config.js","hooks/sensorData.js","pages/common/Graph/Axes.js","pages/common/Graph/DayGraph.js","hooks/graphScales.js","pages/common/Graph/index.js","hooks/dataSummary.js","pages/Home/index.js","hooks/window.js","App.js","serviceWorker.js","index.js"],"names":["env","apiEndpoint","useSensorData","thing","_useState","useState","_useState2","Object","slicedToArray","sensorData","setSensorData","useEffect","fetch","method","headers","Content-Type","mode","then","res","json","XAxis","props","scale","transform","gridline","className","from","domain","to","width","range","dates","Array","differenceInHours","fill","map","x","i","addHours","concat","react_default","a","createElement","lib","d","react","key","x1","x2","y1","y2","y","textAnchor","length","format","undefined","stroke","strokeWidth","YAxis","yMin","yRange","yVal","alignmentBaseline","DayGraph","height","date","data","yScale","ppmColorScale","xScale","scaleTime","setScale","useTimeScale","translate","Axes_XAxis","Axes_YAxis","layout_lib","nodeEnter","objectSpread","mean","upper","lower","animate","nodes","_ref","Date","color","cx","cy","r","Graph","summaryData","interval","min","max","setSummaryData","intervalSeconds","allMinMax","outputData","keys","baseDate","dayData","reduce","c","timeGroup","timestamp","differenceInSeconds","push","avgValues","ppm","quantile","median","apply","toConsumableArray","extent","sort","b","totalExtent","useSummaryData","margin","_useState3","scaleLinear","_useState4","useLinearScale","_ref2","interpolator","_useState5","scaleSequential","_useState6","useSequentialScale","interpolateRdYlGn","Graph_DayGraph","Home","window","innerWidth","setWidth","addEventListener","debounce","useWindowWidth","pages_common_Graph","App","pages_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7090cf94.chunk.js","sourcesContent":["const dev = {\n  apiEndpoint: 'http://localhost:4000/thing/'\n}\n\nconst prod = {\n  apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/'\n}\n\nconst env = process.env.NODE_ENV === 'development'\n  ? dev\n  : prod;\n\nexport {\n  env\n}\n\n","import { useState, useEffect } from 'react';\nimport { env } from '../config'\n\nconst useSensorData = (thing) => {\n  const [sensorData, setSensorData] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      env.apiEndpoint + thing,\n      {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors'\n      }\n    )\n      .then(res => res.json())\n      .then(res => { setSensorData(res) });\n  }, []);\n\n  return sensorData\n}\n\nexport default useSensorData;\n","import React, { Fragment } from 'react';\nimport { Group, Line, Text } from '@potion/element'\nimport { differenceInHours, addHours, format } from 'date-fns'\n\nconst XAxis = (props) => {\n  const { scale, transform, gridline, className } = props;\n\n  const from = scale.domain()[0];\n  const to = scale.domain()[1];\n  const width = scale.range()[1];\n\n  const dates = new Array(differenceInHours(to, from)).fill(0).map((x, i) => addHours(from, i)).concat(to);\n\n  return (\n    <Group transform={transform} className={className}>\n      {dates.map((d, i) => {\n        const x = scale(d);\n        return (\n        <Fragment key={i}>\n          <Line\n            x1={x} x2={x}\n            y1={0} y2={5}\n            className=\"tick\"\n          />\n          <Text\n            className=\"tick-label\"\n            x={x}\n            y={13}\n            textAnchor={i > 0 ? i < dates.length-1 ? 'middle' : 'end' : 'start' }\n          >\n            {format(d, 'HH:mm')}\n          </Text>\n          {gridline === undefined || i === 0\n            ? null\n            : (<Line x1={x} x2={x} y1={-gridline} y2={0} className=\"gridline\"/>)}\n        </Fragment>\n        );\n      })}\n      <Line x1={0} y1={0} x2={width} y2={0} stroke='black' strokeWidth={1} className=\"axis\"/>\n    </Group>\n  )\n}\n\nconst YAxis = (props) => {\n  const { scale, transform, gridline, className } = props;\n\n  const domain = scale.domain();\n\n  const yMin = domain[0];\n  const yRange = domain[1]-domain[0];\n  const ticks = 6;\n\n  const range = scale.range();\n\n  return (\n    <Group transform={transform} className={className}>\n      {new Array(ticks).fill(0).map((x, i) => {\n        const yVal = (yMin + i*yRange/(ticks - 1)) | 0;\n        const y = scale(yVal);\n        return (\n          <Fragment key={i}>\n            <Line\n              x1={0}\n              x2={-5}\n              y1={y}\n              y2={y}\n              stroke='black'\n              strokeWidth={1}\n              className=\"tick\"\n            />\n            <Text\n              className=\"tick-label\"\n              x={-7}\n              y={y}\n              textAnchor='end'\n              alignmentBaseline='central'\n            >\n              {yVal}\n            </Text>\n            {\n              gridline === undefined || i === 0\n                ? null\n                : (<Line x1={0} x2={gridline} y1={y} y2={y} className=\"gridline\"/>)\n            }\n          </Fragment>\n        )\n      })}\n      <Line x1={0} x2={0} y1={range[0]} y2={range[1]} stroke=\"black\" strokeWidth={1} />\n    </Group>\n  );\n}\n\nexport {\n  XAxis,\n  YAxis,\n}\n","import React, { Fragment } from 'react'\nimport { Collection } from '@potion/layout'\nimport { Group, Text, Circle, Line } from '@potion/element'\nimport { addHours, format } from 'date-fns'\n\nimport { XAxis, YAxis } from './Axes'\n\nimport './index.css'\n\nimport { useTimeScale } from '../../../hooks/graphScales'\n\nconst DayGraph = (props) => {\n  const {\n    x,\n    y,\n    width,\n    height,\n    date,\n    data,\n    yScale,\n    ppmColorScale\n  } = props;\n\n  const from = addHours(date, 0),\n        to = addHours(date, 24);\n\n  const xScale = useTimeScale({ width, from, to });\n\n  const yMin = yScale.domain()[0];\n\n  return (\n    <Group transform={{translate: [x, y]}}>\n      <Text y={-2} x={5}>{format(date, 'ddd\\tDD\\tMMM')}</Text>\n      <XAxis\n        scale={xScale}\n        transform={{translate: [0, height]}}\n        gridline={height}\n        className=\"x-axis\"\n      />\n      <YAxis\n        scale={yScale}\n        gridline={width}\n        className=\"y-axis\"\n      />\n      <Group className=\"plot\">\n        <Collection\n          data={data}\n          nodeEnter={d => ({ ...d, mean: yMin, upper: yMin, lower: yMin })}\n          animate\n        >\n          {nodes => nodes.map(({key, date, mean, lower, upper}) => {\n            const x = xScale(new Date(date));\n            const color = ppmColorScale(mean);\n            return (\n              <Fragment key={key}>\n                <Line x1={x} x2={x} y1={yScale(lower)} y2={yScale(upper)} />\n                <Circle cx={x} cy={yScale(mean)} r={3} fill={color} stroke=\"grey\" strokeWidth=\"1px\"/>\n              </Fragment>\n            );\n          })}\n        </Collection>\n      </Group>\n    </Group>\n  );\n}\n\nexport default DayGraph;\n","import { useState, useEffect } from 'react';\nimport { scaleTime, scaleLinear, scaleSequential } from 'd3-scale';\n\nconst useTimeScale = (props) => {\n  const { from, to, width } = props;\n  const [scale, setScale] = useState({ scale: scaleTime().domain([from, to]) });\n\n  useEffect(() => {\n    setScale({\n      scale: scale.scale\n        .range([0, width])\n    })\n  }, [width]);\n\n  return scale.scale;\n}\n\nconst useLinearScale = ({ from, to, height }) => {\n  const [ scale, setScale ] = useState({ scale: scaleLinear().domain([from, to])});\n\n  useEffect(() => {\n    setScale({\n      scale: scale.scale\n        .domain([from, to ])\n        .range([height, 0])\n    })\n  }, [from, to, height]);\n\n  return scale.scale;\n}\n\nconst useSequentialScale = ({ from, to, interpolator }) => {\n  const [ scale, setScale ] = useState({ scale: scaleSequential(interpolator).domain([from, to])});\n\n  useEffect(() => {\n    setScale({\n      scale: scale.scale\n        .domain([from, to])\n    })\n  }, [ from, to ])\n\n  return scale.scale;\n}\n\nexport {\n  useTimeScale,\n  useLinearScale,\n  useSequentialScale\n}\n","import React from 'react';\nimport { Svg } from '@potion/element'\n\nimport DayGraph from './DayGraph'\n\nimport { useLinearScale, useSequentialScale } from '../../../hooks/graphScales'\nimport { useSummaryData } from '../../../hooks/dataSummary'\n\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\n\nconst Graph = (props) => {\n  const { data, width } = props;\n\n  const summaryData = useSummaryData({ data: data.data, interval: 10 });\n\n  const margin = { top: 30, bottom: 0, left: 50, right: 30 }\n\n  const drawHeight = 140;\n\n  const height = margin.top + margin.bottom + summaryData.data.length*(drawHeight + 60);\n\n  const yScale = useLinearScale({ height: drawHeight, from: summaryData.min, to: summaryData.max });\n\n  const ppmColorScale = useSequentialScale({ interpolator: interpolateRdYlGn, to: 400, from: 1200 })\n\n  return (\n    <Svg height={height} width={width}>\n      {summaryData.data.length > 0 ? summaryData.data.map((d, i) =>\n        <DayGraph\n          x={margin.left}\n          y={i*(drawHeight+60) + margin.top}\n          width ={width - margin.left - margin.right}\n          height={drawHeight}\n          key={d.date}\n          date={d.date}\n          data={d.data}\n          yScale={yScale}\n          ppmColorScale={ppmColorScale}\n        />\n      ) : null}\n    </Svg>\n  )\n}\n\nexport default Graph;\n","import { useState, useEffect } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { extent, mean, quantile } from 'd3-array';\n\nconst useSummaryData = ({ data, interval }) => {\n\n  const [ summaryData, setSummaryData ] = useState({ min: 0, max: 0, data: []});\n\n  const intervalSeconds = interval * 60;\n\n  useEffect(() => {\n    const allMinMax = [];\n    const outputData = Object.keys(data).map(d => {\n      const baseDate = new Date(d + 'T00:00:00');\n\n      const dayData = data[d]\n      .reduce((a, c) => {\n        const timeGroup = c.timestamp + (differenceInSeconds(baseDate, c.timestamp) % intervalSeconds) * 1000;\n\n        if (!a[timeGroup]) a[timeGroup] = [];\n        a[timeGroup].push(c);\n        return a;\n      }, {})\n      const avgValues = Object.keys(dayData).map(key => {\n        return {\n          key,\n          date: +key,\n          mean: mean(dayData[key], d => d.ppm),\n          max: quantile(dayData[key], 1, d => d.ppm),\n          upper: quantile(dayData[key], 0.75, d => d.ppm),\n          median: quantile(dayData[key], 0.5, d => d.ppm),\n          lower: quantile(dayData[key], 0.25, d => d.ppm),\n          min: quantile(dayData[key], 0, d => d.ppm)\n        }\n      })\n      allMinMax.push(...extent(avgValues, d => d.mean));\n      return { \n        date: d,\n        data: avgValues\n      };\n    }).sort((a, b) => a.date >= b.date ? a.date > b.date ? -1 : 0 : 1);\n\n    const totalExtent = extent(allMinMax);\n\n    setSummaryData({\n      min: totalExtent[0],\n      max: totalExtent[1],\n      data: outputData\n    });\n\n  }, [data]);\n\n  return summaryData;\n}\n\nexport { useSummaryData };\n","import React from 'react';\nimport useSensorData from '../../hooks/sensorData'\nimport Graph from '../common/Graph'\nimport { useWindowWidth } from '../../hooks/window'\n\nconst Home = (props) => {\n  const data = useSensorData('breather');  \n\n  const width = useWindowWidth();\n\n  return (\n    <div>\n      <section>\n        {data !== null\n          ? <Graph data={data} width={width} />\n          : null\n        }\n      </section>\n    </div>\n  )\n}\n\nexport default Home;\n\n","import { useState, useEffect } from 'react';\nimport debounce from 'debounce'\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', debounce(() => {\n      setWidth(window.innerWidth);\n    }, 500));\n  }, [])\n\n  return width;\n}\n\nexport { useWindowWidth };\n","import React from 'react';\nimport Home from './pages/Home'\n\nconst App = (props) => {\n  return(\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}