{"version":3,"sources":["config.js","hooks/sensorData.js","pages/common/Graph/Axes.js","hooks/graphScales.js","pages/common/Graph/DayGraph.js","pages/common/Graph/index.js","hooks/dataSummary.js","pages/common/Information/index.js","pages/Home/index.js","hooks/window.js","App.js","serviceWorker.js","index.js"],"names":["env","apiEndpoint","useSensorData","thing","_useState","useState","_useState2","Object","slicedToArray","sensorData","setSensorData","useEffect","fetch","method","headers","Content-Type","mode","then","res","json","XAxis","props","scale","transform","gridline","className","ticks","tickFormat","axisEl","useRef","select","current","call","axisBottom","concat","toConsumableArray","domain","range","react_default","a","createElement","lib","map","tick","key","x1","x2","y1","y2","ref","YAxis","axisLeft","filter","_x","i","useSequentialScale","_ref3","from","to","interpolator","scaleSequential","DayGraph","x","y","width","height","date","data","yScale","ppmColorScale","xScale","_ref","scaleTime","useTimeScale","addHours","yMin","clipId","clipPath","translate","format","Axes_XAxis","timeHour","every","timeFormat","Axes_YAxis","id","layout_lib","nodeEnter","d","objectSpread","median","upper","lower","animate","nodes","Date","react","cx","cy","r","fill","stroke","strokeWidth","Graph","summaryData","interval","min","max","setSummaryData","intervalSeconds","allMinMax","outputData","keys","baseDate","dayData","reduce","c","timeGroup","timestamp","differenceInSeconds","push","avgValues","mean","ppm","quantile","apply","extent","sort","b","totalExtent","useSummaryData","margin","length","_ref2","scaleLinear","useLinearScale","interpolateRdYlGn","Graph_DayGraph","LegendTable","children","LegendTableItem","color","explanation","style","background-color","Information","href","target","rel","Information_LegendTable","Information_LegendTableItem","Home","window","innerWidth","setWidth","addEventListener","debounce","useWindowWidth","pages_common_Graph","pages_common_Information","App","pages_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb84c176.chunk.js","sourcesContent":["const dev = {\n  apiEndpoint: 'http://localhost:4000/thing/'\n}\n\nconst prod = {\n  apiEndpoint: 'https://bnb7g0g5g1.execute-api.eu-central-1.amazonaws.com/dev/thing/'\n}\n\nconst env = process.env.NODE_ENV === 'development'\n  ? dev\n  : prod;\n\nexport {\n  env\n}\n\n","import { useState, useEffect } from 'react';\nimport { env } from '../config'\n\nconst useSensorData = (thing) => {\n  const [sensorData, setSensorData] = useState(null);\n\n  useEffect(() => {\n    fetch(\n      env.apiEndpoint + thing,\n      {\n        method: 'GET',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        mode: 'cors'\n      }\n    )\n      .then(res => res.json())\n      .then(res => { setSensorData(res) });\n  }, []);\n\n  return sensorData\n}\n\nexport default useSensorData;\n","import React, { useRef, useEffect } from 'react';\nimport { Group, Line } from '@potion/element'\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { select } from 'd3-selection';\n\nconst XAxis = (props) => {\n  const { scale, transform, gridline, className, ticks, tickFormat } = props;\n\n  const axisEl = useRef(null);\n\n  useEffect(() => {\n    select(axisEl.current)\n      .call(\n        axisBottom()\n        .scale(scale)\n        .ticks(ticks)\n        .tickFormat(tickFormat)\n      );\n  }, [ ...scale.domain(), ...scale.range() ]);\n\n  return (\n    <Group transform={transform} className={className}>\n      {gridline && scale.ticks(ticks).map(tick => (\n        <Line key={tick} x1={scale(tick)} x2={scale(tick)} y1={-gridline} y2={0} className=\"gridline\"/>\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  )\n}\n\nconst YAxis = (props) => {\n  const { scale, transform, gridline, className, ticks, tickFormat } = props;\n\n  const axisEl = useRef(null);\n\n  useEffect(() => {\n    select(axisEl.current)\n      .call(\n        axisLeft()\n        .scale(scale)\n        .ticks(ticks)\n        .tickFormat(tickFormat)\n      );\n  }, [...scale.domain(), ...scale.range() ]);\n\n  return (\n    <Group transform={transform} className={className}>\n      {gridline && scale.ticks(ticks).filter((_x, i) => i !== 0).map((tick, i) => (\n        <Line key={tick} x1={0} x2={gridline} y1={scale(tick)} y2={scale(tick)} className=\"gridline\"/>\n      ))}\n      <g ref={axisEl}></g>\n    </Group>\n  );\n}\n\nexport {\n  XAxis,\n  YAxis,\n}\n","import { useEffect } from 'react';\nimport { scaleTime, scaleLinear, scaleSequential } from 'd3-scale';\n\nconst useTimeScale = ({ from, to, width }) => {\n  const scale = scaleTime()\n    .domain([from, to ])\n    .range([0, width]);\n\n  useEffect(() => {\n    scale\n      .range([0, width])\n  }, [width]);\n\n  return scale;\n}\n\nconst useLinearScale = ({ from, to, height }) => {\n  const scale = scaleLinear()\n    .domain([from, to])\n    .range([ height, 0 ]);\n\n  useEffect(() => {\n    scale\n      .domain([from, to ])\n      .range([height, 0]);\n  }, [from, to, height]);\n\n  return scale;\n}\n\nconst useSequentialScale = ({ from, to, interpolator }) => {\n  const scale = scaleSequential(interpolator)\n    .domain([from, to]);\n\n  useEffect(() => {\n    scale\n      .domain([from, to]);\n  }, [ from, to ])\n\n  return scale;\n}\n\nexport {\n  useTimeScale,\n  useLinearScale,\n  useSequentialScale\n}\n","import React, { Fragment } from 'react'\nimport { Collection } from '@potion/layout'\nimport { Group, Text, Circle, Line, Rect } from '@potion/element'\nimport { addHours, format } from 'date-fns'\nimport { timeHour } from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\n\nimport { XAxis, YAxis } from './Axes'\n\nimport './index.css'\n\nimport { useTimeScale } from '../../../hooks/graphScales'\n\nconst DayGraph = (props) => {\n  const {\n    x,\n    y,\n    width,\n    height,\n    date,\n    data,\n    yScale,\n    ppmColorScale\n  } = props;\n\n  const from = addHours(date, 6),\n        to = addHours(date, 20);\n\n  const xScale = useTimeScale({ width, from, to });\n\n  const yMin = yScale.domain()[0];\n\n  const clipId = `clip-${date}`;\n  const clipPath = `url(#${clipId})`;\n\n  return (\n    <Group transform={{translate: [x, y]}}>\n      <Text y={-2} x={5}>{format(date, 'ddd\\tDD\\tMMM')}</Text>\n      <XAxis\n        scale={xScale}\n        transform={{translate: [0, height]}}\n        gridline={height}\n        className=\"x-axis\"\n        ticks={timeHour.every(1)}\n        tickFormat={timeFormat('%H:%M')}\n      />\n      <YAxis\n        scale={yScale}\n        gridline={width}\n        className=\"y-axis\"\n        ticks={7}\n      />\n      <Group className=\"plot\">\n        <clipPath id={clipId}>\n          <Rect width={width} height={height} />\n        </clipPath>\n        <Collection\n          data={data}\n          nodeEnter={d => ({ ...d, median: yMin, upper: yMin, lower: yMin })}\n          animate\n        >\n          {nodes => nodes.map(({key, date, median, lower, upper}) => {\n            const x = xScale(new Date(date));\n            return (\n              <Fragment key={key}>\n                <Line x1={x} x2={x} y1={yScale(lower)} y2={yScale(upper)} clipPath={clipPath}/>\n                <Circle cx={x} cy={yScale(median)} r={3} fill={ppmColorScale(median)} stroke=\"grey\" strokeWidth=\"1px\" clipPath={clipPath}/>\n              </Fragment>\n            );\n          })}\n        </Collection>\n      </Group>\n    </Group>\n  );\n}\n\nexport default DayGraph;\n","import React from 'react';\nimport { Svg } from '@potion/element'\n\nimport DayGraph from './DayGraph'\n\nimport { useLinearScale, useSequentialScale } from '../../../hooks/graphScales'\nimport { useSummaryData } from '../../../hooks/dataSummary'\n\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\n\nconst Graph = (props) => {\n  const { data, width } = props;\n\n  const summaryData = useSummaryData({ data: data.data, interval: 10 });\n\n  const margin = { top: 30, bottom: 0, left: 50, right: 30 }\n\n  const drawHeight = 140;\n\n  const height = margin.top + margin.bottom + summaryData.data.length*(drawHeight + 60);\n\n  const yScale = useLinearScale({ height: drawHeight, from: summaryData.min, to: summaryData.max });\n\n  const ppmColorScale = useSequentialScale({ interpolator: interpolateRdYlGn, to: 400, from: 1200 })\n\n  return (\n    <Svg height={height} width={width}>\n      {summaryData.data.length > 0 ? summaryData.data.map((d, i) =>\n        <DayGraph\n          x={margin.left}\n          y={i*(drawHeight+60) + margin.top}\n          width ={width - margin.left - margin.right}\n          height={drawHeight}\n          key={d.date}\n          date={d.date}\n          data={d.data}\n          yScale={yScale}\n          ppmColorScale={ppmColorScale}\n        />\n      ) : null}\n    </Svg>\n  )\n}\n\nexport default Graph;\n","import { useState, useEffect } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { extent, mean, quantile } from 'd3-array';\n\nconst useSummaryData = ({ data, interval }) => {\n\n  const [ summaryData, setSummaryData ] = useState({ min: 0, max: 0, data: []});\n\n  const intervalSeconds = interval * 60;\n\n  useEffect(() => {\n    const allMinMax = [];\n    const outputData = Object.keys(data).map(d => {\n      const baseDate = new Date(d + 'T00:00:00');\n\n      const dayData = data[d]\n      .reduce((a, c) => {\n        const timeGroup = c.timestamp + (differenceInSeconds(baseDate, c.timestamp) % intervalSeconds) * 1000;\n\n        if (!a[timeGroup]) a[timeGroup] = [];\n        a[timeGroup].push(c);\n        return a;\n      }, {})\n      const avgValues = Object.keys(dayData).map(key => {\n        return {\n          key,\n          date: +key,\n          mean: mean(dayData[key], d => d.ppm),\n          max: quantile(dayData[key], 1, d => d.ppm),\n          upper: quantile(dayData[key], 0.75, d => d.ppm),\n          median: quantile(dayData[key], 0.5, d => d.ppm),\n          lower: quantile(dayData[key], 0.25, d => d.ppm),\n          min: quantile(dayData[key], 0, d => d.ppm)\n        }\n      })\n      allMinMax.push(...extent(avgValues, d => d.mean));\n      return { \n        date: d,\n        data: avgValues\n      };\n    }).sort((a, b) => a.date >= b.date ? a.date > b.date ? -1 : 0 : 1);\n\n    const totalExtent = extent(allMinMax);\n\n    setSummaryData({\n      min: totalExtent[0],\n      max: totalExtent[1],\n      data: outputData\n    });\n\n  }, [data]);\n\n  return summaryData;\n}\n\nexport { useSummaryData };\n","import React from 'react';\nimport { interpolateRdYlGn } from 'd3-scale-chromatic'\nimport { useSequentialScale } from '../../../hooks/graphScales'\n\nimport './index.css';\n\nconst LegendTable = ({children}) => (<table className=\"info-legend\"><tbody>{children}</tbody></table>)\n\nconst LegendTableItem = ({color, range, explanation}) => (\n  <tr>\n    <td className=\"info-legend-range\">\n      <span className=\"dot\" style={{'background-color': color}}></span>\n      {range}\n    </td>\n    <td className=\"info-legend-description\">{explanation}</td>\n  </tr>\n);\n\nconst Information = () => {\n  const ppmColorScale = useSequentialScale({ interpolator: interpolateRdYlGn, to: 400, from: 1200 });\n\n  return (\n  <section className=\"info-container\">\n    <h1>Information</h1>\n    <p>\n      The graph to the right measures the average Carbon Dioxide (CO<sub>2</sub>)\n      concentration near the sensor in the office. And reads the values in Parts\n      Per Million (ppm)\n    </p>\n    <p>\n      CO<sub>2</sub> is a colorless gas with a density about 60% higher than that\n      of dry air. The current global concentration is about 410 ppm, having risen\n      from pre-industrial levels of 280 ppm. CO<sub>2</sub> is produced by all\n      aerobic organisms (things that breathe air) when they metabolize\n      carbohydrates and lipids (fats etc) to produce energy by respiration.\n    </p>\n    <p>\n      CO<sub>2</sub> levels outside of buildings can range from 380-500ppm. At\n      very high concentrations (10.000ppm), CO<sub>2</sub> becomes toxic to\n      animals. Raising the concentration to 10.000ppm for several hours will\n      kill spider mites and whiteflies in a greenhouse.\n    </p>\n    <p>\n      Relative to 600 ppm, at 1,000 ppm CO2, moderate and statistically significant\n      decrements occurred in six of nine scales of decision-making performance\n      <a href=\"https://web.archive.org/web/20160305212909/http://ehp.niehs.nih.gov/wp-content/uploads/2012/09/ehp.1104789.pdf\" target=\"_blank\" rel=\"noopener noreferrer\"><sup>[ref]</sup></a>.\n      In a study of Volatile Organic Compound Exposure (VOC), of which CO<sub>2</sub>\n      is one, average cognitive scores were 61% higher on the Green building day\n      (~740ppm) and 101% higher on the two Green+ (~502ppm) building days than\n      on the Conventional building day (~940ppm) <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4892924/\" target=\"_blank\" rel=\"noopener noreferrer\"><sup>[ref]</sup></a>.\n    </p>\n    <h2>Legend</h2>\n    <LegendTable>\n      <LegendTableItem color={ppmColorScale(500)} range=\"400-600\" explanation=\"Ideal\" />\n      <LegendTableItem color={ppmColorScale(700)} range=\"600-800\" explanation=\"Okay, mild cognitive impairment\" />\n      <LegendTableItem color={ppmColorScale(900)} range=\"800-1000\" explanation=\"Some cognitive impairment\" />\n      <LegendTableItem color={ppmColorScale(1100)} range=\"1000-1200\" explanation=\"Open some windows already\" />\n      <LegendTableItem color={ppmColorScale(1300)} range=\"1200+\" explanation=\"Illegal in South Netherlands (Belgium)\" />\n    </LegendTable>\n  </section>\n  );\n}\n\nexport default Information;\n","import React, { Fragment } from 'react';\nimport useSensorData from '../../hooks/sensorData'\nimport { useWindowWidth } from '../../hooks/window'\n\nimport Graph from '../common/Graph'\nimport Information from '../common/Information'\n\nimport './Home.css'\n\nconst Home = (props) => {\n  const data = useSensorData('breather');  \n\n  const width = useWindowWidth();\n\n  return (\n    <Fragment>\n      <section>\n        {data !== null\n          ? <Graph data={data} width={width*0.65} />\n          : null\n        }\n      </section>\n      <Information />\n    </Fragment>\n  )\n}\n\nexport default Home;\n\n","import { useState, useEffect } from 'react';\nimport debounce from 'debounce'\n\nconst useWindowWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', debounce(() => {\n      setWidth(window.innerWidth);\n    }, 500));\n  }, [])\n\n  return width;\n}\n\nexport { useWindowWidth };\n","import React from 'react';\nimport Home from './pages/Home'\n\nconst App = (props) => {\n  return(\n    <div className=\"App\">\n      <Home />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}